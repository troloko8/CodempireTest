{"version":3,"sources":["store/modal/reducers.js","store/modal/actions.js","question/question.js","store/result/reducers.js","store/result/actions.js","store/reducers.js","components/MainContainer/QuestionText/QuestionText.jsx","components/MainContainer/QuestionCkeckbox/QuestionCkeckbox.jsx","components/MainContainer/QuestionRadio/QuestionRadio.jsx","components/MainContainer/QuestionSelect/QuestionSelect.jsx","components/MainContainer/Buttons/Buttons.jsx","components/MainContainer/Modal/Modal.jsx","components/MainContainer/MainContainer.jsx","components/Result/Result.jsx","App.js","serviceWorker.js","index.js"],"names":["chekedInputs","check","type","payload","status","num","setModalDisplay","display","setInputStatus","question","answer","correctAnswer","answersStatus","i","length","push","defaultState","inputStatus","checkingAnswer","checking","resetResultCorrectAnswer","value","allAnswers","correctAnswers","combineReducers","modal","state","action","modalStatus","undefined","find","el","result","Number","mapDispatchToProps","connect","props","useState","counterAnswers","setCounterAnswers","checkValue","localStorage","setItem","useEffect","getItem","className","onChange","e","target","placeholder","setAnswer","input","checked","answers","map","ans","index","key","name","includes","onClick","closest","children","input–°heck","defaultValue","selectedIndex","disabled","window","location","href","to","style","MainContainer","mapQuestion","qsn","store","createStore","rootReducer","composeWithDevTools","App","exact","path","component","Result","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09b3f3c7.chunk.js","sourcesContent":["import { CHECK_INPUT } from './actions';\r\nimport { SET_MODAL_DISPLAY } from './actions';\r\nimport { SET_INPUT_STATUS } from './actions';\r\nimport { question } from './../../question/question';\r\n\r\nlet answersStatus = [];\r\nfor (let i = 0; i < question.length; i++) {\r\n  answersStatus.push({\r\n    num: i,\r\n    status: false,\r\n  })\r\n}\r\n// console.log(allAnswers)\r\n// const answersStatus = [\r\n//   {\r\n//     num: 0,\r\n//     status: false,\r\n//   },\r\n//   {\r\n//     num: 1,\r\n//     status: false,\r\n//   },\r\n//   {\r\n//     num: 2,\r\n//     status: false,\r\n//   },\r\n//   {\r\n//     num: 3,\r\n//     status: false,\r\n//   },\r\n// ]\r\n\r\nconst defaultState = {\r\n  status: true,\r\n  display: 'none',\r\n  inputStatus: false\r\n}\r\n\r\nexport const modalReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CHECK_INPUT:\r\n\r\n      for (let i = 0; i < answersStatus.length; i++) {\r\n        if (action.num == i) {\r\n          answersStatus[i].status = action.payload\r\n        }\r\n      }\r\n\r\n      let modalStatus = false;\r\n      answersStatus.find(el => el.status == false) == undefined\r\n        ? modalStatus = false\r\n        : modalStatus = true\r\n      return {\r\n        ...state,\r\n        status: modalStatus\r\n      }\r\n    case SET_MODAL_DISPLAY:\r\n      return {\r\n        ...state,\r\n        display: action.payload\r\n      }\r\n    case SET_INPUT_STATUS:\r\n      return {\r\n        ...state,\r\n        inputStatus: action.payload\r\n      }\r\n    default:\r\n      break\r\n  }\r\n\r\n  return state;\r\n}","export const CHECK_INPUT = 'CHECK_INPUT'\r\nexport const SET_MODAL_DISPLAY = 'SET_MODAL_DISPLAY'\r\nexport const SET_INPUT_STATUS = 'SET_INPUT_STATUS'\r\n\r\nexport const chekedInputs = (check) => ({\r\n  type: CHECK_INPUT,\r\n  payload: check.status,\r\n  num: check.num\r\n})\r\n\r\nexport const setModalDisplay = (display) => ({\r\n  type: SET_MODAL_DISPLAY,\r\n  payload: display\r\n})\r\n\r\nexport const setInputStatus = (status) => ({\r\n  type: SET_INPUT_STATUS,\r\n  payload: status\r\n})","export const question = [\r\n  {\r\n    type: 'text',\r\n    question: '2+2',\r\n    answer: ['4'],\r\n    correctAnswer: ['4']\r\n  },\r\n  {\r\n    type: 'radio',\r\n    question: '2+2',\r\n    answer: ['4', '5'],\r\n    correctAnswer: ['4']\r\n  },\r\n  {\r\n    type: 'checkbox',\r\n    question: '2+2+22',\r\n    answer: ['26', '–î–≤–∞–¥—Ü–∞—Ç—å —à–µ—Å—Ç—å', '24'],\r\n    correctAnswer: ['26', '–î–≤–∞–¥—Ü–∞—Ç—å —à–µ—Å—Ç—å']\r\n  },\r\n  {\r\n    type: 'checkbox',\r\n    question: '2*3*2',\r\n    answer: ['22', '33', '12'],\r\n    correctAnswer: ['12']\r\n  },\r\n  {\r\n    type: 'select',\r\n    question: '2+2',\r\n    answer: ['4', '2', '5'],\r\n    correctAnswer: ['4']\r\n  },\r\n]","import { CHECK_ANSWER } from './actions';\r\nimport { RESET_RESULT_CORRECT_ANSWER } from './actions';\r\nimport { question } from './../../question/question';\r\n\r\nlet allAnswers = 0;\r\nfor (let i = 0; i < question.length; i++) {\r\n  allAnswers += question[i].correctAnswer.length\r\n}\r\n\r\nconst defaultState = {\r\n  allAnswers: allAnswers,\r\n  correctAnswers: 0\r\n}\r\n\r\nexport const answersReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CHECK_ANSWER:\r\n      return {\r\n        ...state,\r\n        correctAnswers: state.correctAnswers + Number(action.payload)\r\n      }\r\n    case RESET_RESULT_CORRECT_ANSWER:\r\n      return {\r\n        ...state,\r\n        correctAnswers: action.payload\r\n      }\r\n    default:\r\n      break\r\n  }\r\n\r\n  return state;\r\n}","export const CHECK_ANSWER = 'CHECK_ANSWER'\r\nexport const RESET_RESULT_CORRECT_ANSWER = 'RESET_RESULT_CORRECT_ANSWER'\r\n\r\nexport const checkingAnswer = (checking) => ({\r\n  type: CHECK_ANSWER,\r\n  payload: checking\r\n})\r\n\r\nexport const resetResultCorrectAnswer = (value) => ({\r\n  type: RESET_RESULT_CORRECT_ANSWER,\r\n  payload: value\r\n})\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { modalReducer } from \"./modal/reducers\";\r\nimport { answersReducer } from \"./result/reducers\";\r\n\r\nexport default combineReducers({\r\n  modal: modalReducer,\r\n  result: answersReducer\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { chekedInputs } from '../../../store/modal/actions';\r\nimport { checkingAnswer } from '../../../store/result/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction QuestionText(props) {\r\n\r\n  const [counterAnswers, setCounterAnswers] = useState(0)\r\n\r\n  // useEffect(() => {\r\n  //   inputValue == props.state.correctAnswer && props.modal.inputStatus === true\r\n  //     ? props.checkingAnswer(1)\r\n  //     : props.checkingAnswer(0)\r\n  // }, [props.modal.inputStatus])\r\n\r\n  const checkValue = {\r\n    num: props.num,\r\n    status: false,\r\n  };\r\n\r\n  const checkModal = (e) => {\r\n    // debugger\r\n    // console.log(typeof (e.target.value) + \" \" + typeof (props.state.correctAnswer))\r\n    // console.log(e.target.value  props.state.correctAnswer)\r\n    e.target.value === props.state.correctAnswer[0]\r\n      ? setCounterAnswers(1)\r\n      : setCounterAnswers(0)\r\n\r\n    e.target.value == ''\r\n      ? checkValue.status = false\r\n      : checkValue.status = true\r\n    props.chekedInputs(checkValue)\r\n  }\r\n\r\n  localStorage.setItem('textCurrent', counterAnswers)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.checkingAnswer(localStorage.getItem('textCurrent'))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <p className=\"question__title\">{props.state.question}</p>\r\n      <div className=\"question__container\">\r\n        <input type=\"text\"\r\n          onChange={checkModal}\r\n          className=\"question__input-text\"\r\n          placeholder=\"–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç\"\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  chekedInputs,\r\n  checkingAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionText)","import React from 'react';\r\nimport { chekedInputs } from '../../../store/modal/actions';\r\nimport { checkingAnswer } from '../../../store/result/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst input–°heck = (e, checkValue) => {\r\n  const el = e.target.closest('.question').children;\r\n\r\n\r\n  for (let i = 1; i < el.length; i++) {\r\n    if (el[i].children[0].children[0].checked) {\r\n      checkValue.status = true\r\n      return\r\n    } else {\r\n      checkValue.status = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction QuestionCkeckbox(props) {\r\n  const correctAnswer = props.state.correctAnswer\r\n  const checkValue = {\r\n    num: props.num,\r\n    status: false,\r\n  };\r\n\r\n  const checkModal = (e) => {\r\n    input–°heck(e, checkValue)\r\n    props.chekedInputs(checkValue)\r\n  }\r\n\r\n  const setAnswer = (e) => {\r\n    const input = e.target\r\n\r\n    if (input.value === 'true') {\r\n      input.checked == true\r\n        ? props.checkingAnswer(1)\r\n        : props.checkingAnswer(-1)\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     props.checkingAnswer(localStorage.getItem(`checkboxCurrent${props.state.num}`))\r\n  //   }\r\n  // }, [])\r\n\r\n  const opitons = props.state.answer,\r\n    answers = opitons.map((ans, index) => {\r\n      return (\r\n        <div className=\"question__container\" key={index} >\r\n          <label className=\"question__label\">\r\n            <input\r\n              className=\"question__input-checkbox\"\r\n              name=\"answer3\"\r\n              type=\"checkbox\"\r\n              value={correctAnswer.includes(ans)\r\n                ? true\r\n                : false}\r\n              onClick={setAnswer}\r\n            ></input>\r\n            <span className=\"question__text\">{ans}</span>\r\n          </label>\r\n        </div >\r\n      )\r\n    })\r\n\r\n  return (\r\n    <div className=\"question\" onChange={checkModal}>\r\n      <p className=\"question__title\">{props.state.question}</p>\r\n      {answers}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  chekedInputs,\r\n  checkingAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionCkeckbox)\r\n","import React, { useState, useEffect } from 'react';\r\nimport { chekedInputs } from '../../../store/modal/actions';\r\nimport { checkingAnswer } from '../../../store/result/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst input–°heck = (e, checkValue) => {\r\n  const el = e.target.closest('.question').children;\r\n\r\n  for (let i = 1; i < el.length; i++) {\r\n    if (el[i].children[0].children[0].checked) {\r\n      checkValue.status = true\r\n      return\r\n    } else {\r\n      checkValue.status = false\r\n    }\r\n  }\r\n}\r\n\r\nfunction QuestionRadio(props) {\r\n  const [counterAnswers, setCounterAnswers] = useState(0)\r\n  const correctAnswer = props.state.correctAnswer\r\n  const checkValue = {\r\n    num: props.num,\r\n    status: false,\r\n  };\r\n\r\n  const checkModal = (e) => {\r\n    input–°heck(e, checkValue)\r\n    props.chekedInputs(checkValue)\r\n  }\r\n\r\n\r\n  const setAnswer = (e) => {\r\n    const input = e.target\r\n    input.value === 'true'\r\n      ? setCounterAnswers(1)\r\n      : setCounterAnswers(0)\r\n  }\r\n  localStorage.setItem('radioCurrent', counterAnswers)\r\n\r\n  // useEffect(() => {\r\n  //   if (props.modal.inputStatus === true) props.checkingAnswer(counterAnswers)\r\n  // }, [props.modal.inputStatus])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.checkingAnswer(localStorage.getItem('radioCurrent'))\r\n    }\r\n  }, [])\r\n\r\n  const opitons = props.state.answer,\r\n    answers = opitons.map((ans, index) => {\r\n      return (\r\n        <div className=\"question__container\" key={index}>\r\n          <label className=\"question__label\">\r\n            <input\r\n              className=\"question__input-radio\"\r\n              name=\"answer2\"\r\n              value={correctAnswer.includes(ans)\r\n                ? true\r\n                : false}\r\n              type=\"radio\"\r\n              onClick={setAnswer}\r\n            ></input>\r\n            <span className=\"question__text\" >{ans}</span>\r\n          </label>\r\n        </div>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <div className=\"question\" onChange={checkModal}>\r\n      <p className=\"question__title\">{props.state.question}</p>\r\n      {answers}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  chekedInputs,\r\n  checkingAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionRadio)\r\n","import React, { useState, useEffect } from 'react';\r\nimport { chekedInputs } from '../../../store/modal/actions';\r\nimport { checkingAnswer } from '../../../store/result/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction QuestionSelect(props) {\r\n  const [counterAnswers, setCounterAnswers] = useState(0)\r\n  const correctAnswer = props.state.correctAnswer\r\n  const checkValue = {\r\n    num: props.num,\r\n    status: false,\r\n  };\r\n\r\n  const checkModal = (e) => {\r\n    e.target.selectedIndex == 0\r\n      ? checkValue.status = false\r\n      : checkValue.status = true\r\n    props.chekedInputs(checkValue)\r\n  }\r\n\r\n  const setAnswer = (e) => {\r\n    const option = e.target\r\n    option.value === 'true'\r\n      ? setCounterAnswers(1)\r\n      : setCounterAnswers(0)\r\n  }\r\n\r\n  localStorage.setItem('selectCurrent', counterAnswers)\r\n  // useEffect(() => {\r\n  //   if (props.modal.inputStatus === true) props.checkingAnswer(counterAnswers)\r\n  // }, [props.modal.inputStatus])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      props.checkingAnswer(localStorage.getItem('selectCurrent'))\r\n    }\r\n  }, [])\r\n\r\n  const opitons = props.state.answer\r\n  const answers = opitons.map((ans, index) => {\r\n    return (\r\n      <option\r\n        key={index}\r\n        value={\r\n          correctAnswer.includes(ans)\r\n            ? true\r\n            : false\r\n        }\r\n      >{ans}</option>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <p className=\"question__title\">{props.state.question}</p>\r\n      <div className=\"question__container\">\r\n        <select\r\n          defaultValue=\"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç\"\r\n          onChange={checkModal}\r\n          onClick={setAnswer}\r\n        >\r\n          <option disabled>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç</option>\r\n          {answers}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  chekedInputs,\r\n  checkingAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionSelect)\r\n","import React from 'react'\r\nimport { setModalDisplay } from '../../../store/modal/actions';\r\nimport { setInputStatus } from '../../../store/modal/actions';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Buttons(props) {\r\n  let urlResult = window.location.href + \"/result\"\r\n\r\n  const toggleModal = () => {\r\n    props.setInputStatus(true)\r\n    props.modal.status == true\r\n      ? props.setModalDisplay('flex')\r\n      : props.setModalDisplay('none');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"form__buttons\">\r\n      <Link\r\n        className=\"form__button\"\r\n        onClick={toggleModal}\r\n        to={\r\n          props.modal.status == true\r\n            ? \"/\"\r\n            : \"/result\"\r\n        }\r\n      >–û—Ç–≤–µ—Ç–∏—Ç—å</Link>\r\n      {/* <Link\r\n        className=\"form__button\"\r\n        onClick={toggleModal}\r\n        to={\r\n          props.modal.status == true\r\n            ? \"/\"\r\n            : \"/result\"\r\n        }\r\n      >–û—Ç–≤–µ—Ç–∏—Ç—å</Link> */}\r\n      <a\r\n        className=\"form__button\"\r\n      >–û—á–∏—Å—Ç–∏—Ç—å</a>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal,\r\n    result: state.result\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalDisplay,\r\n  setInputStatus\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { setModalDisplay } from '../../../store/modal/actions';\r\nimport { setInputStatus } from '../../../store/modal/actions';\r\nimport { resetResultCorrectAnswer } from '../../../store/result/actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Modal(props) {\r\n\r\n  const reset = () => {\r\n    //reset couner\r\n    props.setInputStatus(false)\r\n    props.setModalDisplay('none')\r\n    props.resetResultCorrectAnswer(0)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"modal\" style={{ display: props.modal.display }}>\r\n      <p className=\"modal__text\">\r\n        –ö–∞–∂–¥—ã–π –Ω–µ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è\r\n–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º, –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\r\n        </p>\r\n      <div className=\"modal__bottons\">\r\n        <Link className=\"modal__button\" to=\"/result\">\r\n          –î–∞\r\n          </Link>\r\n        <a\r\n          className=\"modal__button\"\r\n          onClick={reset}\r\n        >–ù–µ—Ç</a>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    modal: state.modal\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalDisplay,\r\n  setInputStatus,\r\n  resetResultCorrectAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)","import React from 'react';\r\nimport QuestionText from './QuestionText/QuestionText'\r\nimport QuestionCkeckbox from './QuestionCkeckbox/QuestionCkeckbox'\r\nimport QuestionRadio from './QuestionRadio/QuestionRadio'\r\nimport QuestionSelect from './QuestionSelect/QuestionSelect'\r\nimport Buttons from './Buttons/Buttons';\r\nimport Modal from './Modal/Modal';\r\nimport { question } from './../../question/question';\r\n\r\n\r\nconst MainContainer = () => {\r\n\r\n  const mapQuestion = question.map((qsn, index) => {\r\n    switch (qsn.type) {\r\n      case 'text':\r\n        return <QuestionText state={qsn} key={index} num={index} />\r\n      case 'radio':\r\n        return <QuestionRadio state={qsn} key={index} num={index} />\r\n      case 'checkbox':\r\n        return <QuestionCkeckbox state={qsn} key={index} num={index} />\r\n      case 'select':\r\n        return <QuestionSelect state={qsn} key={index} num={index} />\r\n    }\r\n  })\r\n  return (\r\n    <form className=\"form\">\r\n      <div className=\"form__container\">\r\n        {mapQuestion}\r\n        <Buttons />\r\n        <Modal />\r\n      </div>\r\n    </form >\r\n  )\r\n}\r\n\r\nexport default MainContainer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setModalDisplay } from '../../store/modal/actions';\r\nimport { setInputStatus } from '../../store/modal/actions';\r\nimport { resetResultCorrectAnswer } from '../../store/result/actions';\r\n\r\nfunction Result(props) {\r\n\r\n  const reset = () => {\r\n    //reset couner\r\n    props.setInputStatus(false)\r\n    props.setModalDisplay('none')\r\n    props.resetResultCorrectAnswer(0)\r\n  }\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      <h2 className=\"result__title\">Your result</h2>\r\n      <p className=\"result__text\">\r\n        {props.result.correctAnswers}/{props.result.allAnswers}\r\n      </p>\r\n      <Link\r\n        onClick={reset}\r\n        to=\"/\"\r\n      >Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    result: state.result\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalDisplay,\r\n  setInputStatus,\r\n  resetResultCorrectAnswer\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result)\r\n","import React from 'react';\nimport './App.css';\nimport rootReducer from './store/reducers';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport MainContainer from './components/MainContainer/MainContainer'\nimport Result from './components/Result/Result';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter >\n        {/* <MainContainer />\n        <Result /> */}\n        <Route exact path=\"/\" component={MainContainer} />\n        <Route path=\"/result\" component={Result} />\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}